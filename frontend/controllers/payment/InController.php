<?php

namespace frontend\controllers\payment;

use common\components\vk\Exception\TransactionAlreadyExistsException;
use common\models\user\billing\Exception\CurrencyNotFound;
use common\models\user\billing\Exception\WrongMerchantException;
use common\models\user\billing\PaymentAccountManager;
use common\models\user\Exception\UserNotFoundException;
use Throwable;
use Yii;
use yii\filters\AccessControl;
use yii\helpers\ArrayHelper;
use yii\web\BadRequestHttpException;
use yii\web\Controller;
use yii\web\NotFoundHttpException;
use yii\web\Response as ResponseAlias;
use yii\web\ServerErrorHttpException;

class InController extends Controller
{
    public function behaviors()
    {
        return ArrayHelper::merge([
            'access' => [
                'class' => AccessControl::className(),
                'rules' => [
                    [
                        'actions' => ['index', 'check-transaction'],
                        'allow' => true,
                        'roles' => ['@'],
                    ],
                ],
            ]
        ], parent::behaviors()); // TODO: Change the autogenerated stub
    }

    public function actionIndex()
    {
        return $this->render('index');
    }

    /**
     * @param string $tx
     * @return ResponseAlias
     * @throws BadRequestHttpException
     * @throws NotFoundHttpException
     * @throws ServerErrorHttpException
     */
    public function actionCheckTransaction(string $tx)
    {
        try {
            $transaction = PaymentAccountManager::upBalanceFromTransaction($tx);
            if (!$transaction) {
                throw new NotFoundHttpException('Транзакция не найндена');
            }
            Yii::$app->session->setFlash('success', 'Транзакция успешно обработана, Вам было начислено: ' . $transaction->getAmount() . ' VK Coin');
        } catch (UserNotFoundException | CurrencyNotFound $e) {
            throw new NotFoundHttpException('Такой пользователь не зарегистрирован на сайте');
        } catch (WrongMerchantException | TransactionAlreadyExistsException $e) {
            throw new BadRequestHttpException('Транзакция уже авторизована');
        } catch (Throwable $e) {
            throw new ServerErrorHttpException('Ошибка!');
        }


        return $this->redirect(Yii::$app->request->getReferrer());
    }
}